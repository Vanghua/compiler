步骤	状态栈	符号栈	输入串	Action	GOTO	
(1)	0	#	int identifier ( ) { int identifier = constant , identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S598	
(2)	0598	#int	identifier ( ) { int identifier = constant , identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r15	551
(3)	0551	#primaryType	identifier ( ) { int identifier = constant , identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S552	
(4)	0551552	#primaryTypeidentifier	( ) { int identifier = constant , identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S553	
(5)	0551552553	#primaryTypeidentifier(	) { int identifier = constant , identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S556	
(6)	0551552553556	#primaryTypeidentifier()	{ int identifier = constant , identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r34	3
(7)	03	#primaryFunctionDeclaration	{ int identifier = constant , identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S4	
(8)	034	#primaryFunctionDeclaration{	int identifier = constant , identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S508	
(9)	034508	#primaryFunctionDeclaration{int	identifier = constant , identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r15	421
(10)	034421	#primaryFunctionDeclaration{primaryType	identifier = constant , identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S423	
(11)	034421423	#primaryFunctionDeclaration{primaryTypeidentifier	= constant , identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S465	
(12)	034421423465	#primaryFunctionDeclaration{primaryTypeidentifier=	constant , identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S491	
(13)	034421423465491	#primaryFunctionDeclaration{primaryTypeidentifier=constant	, identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r40	497
(14)	034421497	#primaryFunctionDeclaration{primaryTypeassignment	, identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S498	
(15)	034421497498	#primaryFunctionDeclaration{primaryTypeassignment,	identifier ; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S464	
(16)	034421497498464	#primaryFunctionDeclaration{primaryTypeassignment,identifier	; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r26	499
(17)	034421497498499	#primaryFunctionDeclaration{primaryTypeassignment,identifier_list	; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r29	422
(18)	034421422	#primaryFunctionDeclaration{primaryTypeidentifier_list	; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r13	362
(19)	034362	#primaryFunctionDeclaration{basicDeclaration	; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r10	24
(20)	03424	#primaryFunctionDeclaration{declaration	; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r6	10
(21)	03410	#primaryFunctionDeclaration{exp	; if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S11	
(22)	0341011	#primaryFunctionDeclaration{exp;	if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r1	7
(23)	0347	#primaryFunctionDeclaration{statement	if ( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S28	
(24)	034728	#primaryFunctionDeclaration{statementif	( identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S29	
(25)	03472829	#primaryFunctionDeclaration{statementif(	identifier > constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S262	
(26)	03472829262	#primaryFunctionDeclaration{statementif(identifier	> constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r63	295
(27)	03472829295	#primaryFunctionDeclaration{statementif(calChar	> constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S231	
(28)	03472829295231	#primaryFunctionDeclaration{statementif(calChar>	constant ) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S228	
(29)	03472829295231228	#primaryFunctionDeclaration{statementif(calChar>constant	) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r64	232
(30)	03472829295231232	#primaryFunctionDeclaration{statementif(calChar>calChar	) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r73	258
(31)	03472829258	#primaryFunctionDeclaration{statementif(cpStatement	) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r9	30
(32)	0347282930	#primaryFunctionDeclaration{statementif(exp	) { identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S31	
(33)	034728293031	#primaryFunctionDeclaration{statementif(exp)	{ identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S34	
(34)	03472829303134	#primaryFunctionDeclaration{statementif(exp){	identifier = identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S69	
(35)	0347282930313469	#primaryFunctionDeclaration{statementif(exp){identifier	= identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S70	
(36)	034728293031346970	#primaryFunctionDeclaration{statementif(exp){identifier=	identifier + identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S71	
(37)	03472829303134697071	#primaryFunctionDeclaration{statementif(exp){identifier=identifier	+ identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S72	
(38)	0347282930313469707172	#primaryFunctionDeclaration{statementif(exp){identifier=identifier+	identifier } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S73	
(39)	034728293031346970717273	#primaryFunctionDeclaration{statementif(exp){identifier=identifier+identifier	} else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r43	48
(40)	0347282930313448	#primaryFunctionDeclaration{statementif(exp){assignment	} else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r7	38
(41)	0347282930313438	#primaryFunctionDeclaration{statementif(exp){exp	; } else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S39	
(42)	034728293031343839	#primaryFunctionDeclaration{statementif(exp){exp;	} else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r1	35
(43)	0347282930313435	#primaryFunctionDeclaration{statementif(exp){statement	} else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S36	
(44)	034728293031343536	#primaryFunctionDeclaration{statementif(exp){statement}	else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r83	32
(45)	03472829303132	#primaryFunctionDeclaration{statementif(exp)block	else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r76	12
(46)	034712	#primaryFunctionDeclaration{statementonlyIfChoice	else { identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S13	
(47)	03471213	#primaryFunctionDeclaration{statementonlyIfChoiceelse	{ identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S18	
(48)	0347121318	#primaryFunctionDeclaration{statementonlyIfChoiceelse{	identifier = constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S365	
(49)	0347121318365	#primaryFunctionDeclaration{statementonlyIfChoiceelse{identifier	= constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S366	
(50)	0347121318365366	#primaryFunctionDeclaration{statementonlyIfChoiceelse{identifier=	constant } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S392	
(51)	0347121318365366392	#primaryFunctionDeclaration{statementonlyIfChoiceelse{identifier=constant	} for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r40	25
(52)	034712131825	#primaryFunctionDeclaration{statementonlyIfChoiceelse{assignment	} for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r7	10
(53)	034712131810	#primaryFunctionDeclaration{statementonlyIfChoiceelse{exp	; } for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S11	
(54)	03471213181011	#primaryFunctionDeclaration{statementonlyIfChoiceelse{exp;	} for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r1	19
(55)	034712131819	#primaryFunctionDeclaration{statementonlyIfChoiceelse{statement	} for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S20	
(56)	03471213181920	#primaryFunctionDeclaration{statementonlyIfChoiceelse{statement}	for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r83	15
(57)	0347121315	#primaryFunctionDeclaration{statementonlyIfChoiceelseblock	for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r79	22
(58)	034722	#primaryFunctionDeclaration{statementifElseChoice	for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r4	7
(59)	03477	#primaryFunctionDeclaration{statementstatement	for ( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S348	
(60)	03477348	#primaryFunctionDeclaration{statementstatementfor	( int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S349	
(61)	03477348349	#primaryFunctionDeclaration{statementstatementfor(	int identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S508	
(62)	03477348349508	#primaryFunctionDeclaration{statementstatementfor(int	identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r15	421
(63)	03477348349421	#primaryFunctionDeclaration{statementstatementfor(primaryType	identifier = constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S423	
(64)	03477348349421423	#primaryFunctionDeclaration{statementstatementfor(primaryTypeidentifier	= constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S465	
(65)	03477348349421423465	#primaryFunctionDeclaration{statementstatementfor(primaryTypeidentifier=	constant ; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S491	
(66)	03477348349421423465491	#primaryFunctionDeclaration{statementstatementfor(primaryTypeidentifier=constant	; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r40	497
(67)	03477348349421497	#primaryFunctionDeclaration{statementstatementfor(primaryTypeassignment	; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r27	422
(68)	03477348349421422	#primaryFunctionDeclaration{statementstatementfor(primaryTypeidentifier_list	; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r13	362
(69)	03477348349362	#primaryFunctionDeclaration{statementstatementfor(basicDeclaration	; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r10	350
(70)	03477348349350	#primaryFunctionDeclaration{statementstatementfor(declaration	; identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S351	
(71)	03477348349350351	#primaryFunctionDeclaration{statementstatementfor(declaration;	identifier < constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S549	
(72)	03477348349350351549	#primaryFunctionDeclaration{statementstatementfor(declaration;identifier	< constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r63	548
(73)	03477348349350351548	#primaryFunctionDeclaration{statementstatementfor(declaration;calChar	< constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S411	
(74)	03477348349350351548411	#primaryFunctionDeclaration{statementstatementfor(declaration;calChar<	constant ; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S402	
(75)	03477348349350351548411402	#primaryFunctionDeclaration{statementstatementfor(declaration;calChar<constant	; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r64	412
(76)	03477348349350351548411412	#primaryFunctionDeclaration{statementstatementfor(declaration;calChar<calChar	; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r71	352
(77)	03477348349350351352	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement	; identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S353	
(78)	03477348349350351352353	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;	identifier ++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S546	
(79)	03477348349350351352353546	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;identifier	++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r63	535
(80)	03477348349350351352353535	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;calChar	++ ) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S538	
(81)	03477348349350351352353535538	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;calChar++	) identifier ++ while ( identifier < constant ) { identifier ++ } } #	r66	354
(82)	03477348349350351352353354	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;calStatement	) identifier ++ while ( identifier < constant ) { identifier ++ } } #	S355	
(83)	03477348349350351352353354355	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;calStatement)	identifier ++ while ( identifier < constant ) { identifier ++ } } #	S365	
(84)	03477348349350351352353354355365	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;calStatement)identifier	++ while ( identifier < constant ) { identifier ++ } } #	r63	398
(85)	03477348349350351352353354355398	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;calStatement)calChar	++ while ( identifier < constant ) { identifier ++ } } #	S403	
(86)	03477348349350351352353354355398403	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;calStatement)calChar++	while ( identifier < constant ) { identifier ++ } } #	r66	26
(87)	0347734834935035135235335435526	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;calStatement)calStatement	while ( identifier < constant ) { identifier ++ } } #	r8	10
(88)	0347734834935035135235335435510	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;calStatement)exp	; while ( identifier < constant ) { identifier ++ } } #	S11	
(89)	034773483493503513523533543551011	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;calStatement)exp;	while ( identifier < constant ) { identifier ++ } } #	r1	17
(90)	0347734834935035135235335435517	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;calStatement)statement	while ( identifier < constant ) { identifier ++ } } #	r82	356
(91)	03477348349350351352353354355356	#primaryFunctionDeclaration{statementstatementfor(declaration;cpStatement;calStatement)block	while ( identifier < constant ) { identifier ++ } } #	r80	23
(92)	0347723	#primaryFunctionDeclaration{statementstatementloopStatement	while ( identifier < constant ) { identifier ++ } } #	r5	7
(93)	034777	#primaryFunctionDeclaration{statementstatementstatement	while ( identifier < constant ) { identifier ++ } } #	S357	
(94)	034777357	#primaryFunctionDeclaration{statementstatementstatementwhile	( identifier < constant ) { identifier ++ } } #	S358	
(95)	034777357358	#primaryFunctionDeclaration{statementstatementstatementwhile(	identifier < constant ) { identifier ++ } } #	S533	
(96)	034777357358533	#primaryFunctionDeclaration{statementstatementstatementwhile(identifier	< constant ) { identifier ++ } } #	r63	520
(97)	034777357358520	#primaryFunctionDeclaration{statementstatementstatementwhile(calChar	< constant ) { identifier ++ } } #	S521	
(98)	034777357358520521	#primaryFunctionDeclaration{statementstatementstatementwhile(calChar<	constant ) { identifier ++ } } #	S524	
(99)	034777357358520521524	#primaryFunctionDeclaration{statementstatementstatementwhile(calChar<constant	) { identifier ++ } } #	r64	522
(100)	034777357358520521522	#primaryFunctionDeclaration{statementstatementstatementwhile(calChar<calChar	) { identifier ++ } } #	r71	359
(101)	034777357358359	#primaryFunctionDeclaration{statementstatementstatementwhile(cpStatement	) { identifier ++ } } #	S360	
(102)	034777357358359360	#primaryFunctionDeclaration{statementstatementstatementwhile(cpStatement)	{ identifier ++ } } #	S18	
(103)	03477735735835936018	#primaryFunctionDeclaration{statementstatementstatementwhile(cpStatement){	identifier ++ } } #	S365	
(104)	03477735735835936018365	#primaryFunctionDeclaration{statementstatementstatementwhile(cpStatement){identifier	++ } } #	r63	398
(105)	03477735735835936018398	#primaryFunctionDeclaration{statementstatementstatementwhile(cpStatement){calChar	++ } } #	S403	
(106)	03477735735835936018398403	#primaryFunctionDeclaration{statementstatementstatementwhile(cpStatement){calChar++	} } #	r66	26
(107)	0347773573583593601826	#primaryFunctionDeclaration{statementstatementstatementwhile(cpStatement){calStatement	} } #	r8	10
(108)	0347773573583593601810	#primaryFunctionDeclaration{statementstatementstatementwhile(cpStatement){exp	; } } #	S11	
(109)	034777357358359360181011	#primaryFunctionDeclaration{statementstatementstatementwhile(cpStatement){exp;	} } #	r1	19
(110)	0347773573583593601819	#primaryFunctionDeclaration{statementstatementstatementwhile(cpStatement){statement	} } #	S20	
(111)	034777357358359360181920	#primaryFunctionDeclaration{statementstatementstatementwhile(cpStatement){statement}	} #	r83	361
(112)	034777357358359360361	#primaryFunctionDeclaration{statementstatementstatementwhile(cpStatement)block	} #	r81	23
(113)	03477723	#primaryFunctionDeclaration{statementstatementstatementloopStatement	} #	r5	7
(114)	0347777	#primaryFunctionDeclaration{statementstatementstatementstatement	} #	r84	8
(115)	0347778	#primaryFunctionDeclaration{statementstatementstatementmultiStatement	} #	r85	8
(116)	034778	#primaryFunctionDeclaration{statementstatementmultiStatement	} #	r85	8
(117)	03478	#primaryFunctionDeclaration{statementmultiStatement	} #	r85	5
(118)	0345	#primaryFunctionDeclaration{multiStatement	} #	S6	
(119)	03456	#primaryFunctionDeclaration{multiStatement}	#	r38	2
(120)	02	#valueFunctionDeclaration	#	r86	1
(121)	01	#program	#	acc	
